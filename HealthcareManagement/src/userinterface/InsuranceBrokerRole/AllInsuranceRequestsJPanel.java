/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.InsuranceBrokerRole;

import model.Enterprise.Enterprise;
import model.Organization.InsBrokerOrganization;
import model.UserAccount.UserAccount;
import model.WorkQueue.InsuranceWorkRequest;
import model.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Akshita
 */
public class AllInsuranceRequestsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private InsBrokerOrganization insuranceAgentOrganization;

    public AllInsuranceRequestsJPanel(JPanel userProcessContainer, UserAccount userAccount, Enterprise enterprise, InsBrokerOrganization insuranceAgentOrganization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.insuranceAgentOrganization = insuranceAgentOrganization;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblInsuranceWorkTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnProcessRequest = new javax.swing.JButton();
        btnAssign = new javax.swing.JButton();

        setBackground(new java.awt.Color(13, 17, 23));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblInsuranceWorkTable.setBackground(new java.awt.Color(13, 17, 23));
        tblInsuranceWorkTable.setForeground(new java.awt.Color(188, 188, 188));
        tblInsuranceWorkTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "PolicyNumber", "Patient Name", "Health Center", "Sender ", "Receiver Agent", "Billing Amount", "Claim Amount", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblInsuranceWorkTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 111, 1100, 420));

        backJButton.setBackground(new java.awt.Color(13, 17, 23));
        backJButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        backJButton.setForeground(new java.awt.Color(188, 188, 188));
        backJButton.setText("Back");
        backJButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backJButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backJButtonMouseExited(evt);
            }
        });
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(188, 188, 188));
        jLabel2.setText("INSURANCE BROKER REQUEST AREA");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(395, 6, 490, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(188, 188, 188));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Insurance Work Queue");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(928, 79, 228, 30));

        btnProcessRequest.setBackground(new java.awt.Color(13, 17, 23));
        btnProcessRequest.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnProcessRequest.setForeground(new java.awt.Color(188, 188, 188));
        btnProcessRequest.setText("Process Request");
        btnProcessRequest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnProcessRequestMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnProcessRequestMouseExited(evt);
            }
        });
        btnProcessRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessRequestActionPerformed(evt);
            }
        });
        add(btnProcessRequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 550, 157, 32));

        btnAssign.setBackground(new java.awt.Color(13, 17, 23));
        btnAssign.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAssign.setForeground(new java.awt.Color(188, 188, 188));
        btnAssign.setText("Assign to Me");
        btnAssign.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAssignMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAssignMouseExited(evt);
            }
        });
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 550, 157, 32));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backJButtonMouseEntered
        // TODO add your handling code here:
        backJButton.setForeground(new Color(0,0,0));
        backJButton.setBackground(new Color(144,202,249));
    }//GEN-LAST:event_backJButtonMouseEntered

    private void backJButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backJButtonMouseExited
        // TODO add your handling code here:
        backJButton.setForeground(new Color(188,188,188));
        backJButton.setBackground(new Color(13,17,23));
    }//GEN-LAST:event_backJButtonMouseExited

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnProcessRequestMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProcessRequestMouseEntered
        // TODO add your handling code here:
        btnProcessRequest.setForeground(new Color(0,0,0));
        btnProcessRequest.setBackground(new Color(144,202,249));
    }//GEN-LAST:event_btnProcessRequestMouseEntered

    private void btnProcessRequestMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProcessRequestMouseExited
        // TODO add your handling code here:
        btnProcessRequest.setForeground(new Color(188,188,188));
        btnProcessRequest.setBackground(new Color(13,17,23));
    }//GEN-LAST:event_btnProcessRequestMouseExited

    private void btnProcessRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessRequestActionPerformed
        // TODO add your handling code here:

        int selectedRow = tblInsuranceWorkTable.getSelectedRow();
        InsuranceWorkRequest insuranceWorkRequest;

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select a record", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            insuranceWorkRequest = (InsuranceWorkRequest) tblInsuranceWorkTable.getValueAt(selectedRow, 0);

            if (insuranceWorkRequest.getStatus().equals("Rejected")) {
                JOptionPane.showMessageDialog(null, "Cannot process a Rejected Request", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (insuranceWorkRequest.getStatus().equalsIgnoreCase("Sent to Secretary")) {
                JOptionPane.showMessageDialog(null, "Request already processed", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (insuranceWorkRequest.getStatus().equalsIgnoreCase("Sent")) {
                JOptionPane.showMessageDialog(null, "Assign the request first", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (insuranceWorkRequest.getStatus().equalsIgnoreCase("Sent to Finance Department")) {
                JOptionPane.showMessageDialog(null, "Request already sent to Finance department", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (insuranceWorkRequest.getStatus().equalsIgnoreCase("Insurance Claim Approved")) {
                JOptionPane.showMessageDialog(null, "Insurance Claim is already Approved", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!userAccount.equals(insuranceWorkRequest.getReceiver())) {
                JOptionPane.showMessageDialog(null, "Not Authorized", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            } else {

                CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
                userProcessContainer.add("ProcessRequestJPanel", new ProcessRequestJPanel(userProcessContainer, userAccount, enterprise, insuranceWorkRequest));
                cardLayout.next(userProcessContainer);
            }
        }

    }//GEN-LAST:event_btnProcessRequestActionPerformed

    private void btnAssignMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAssignMouseEntered
        // TODO add your handling code here:
        btnAssign.setForeground(new Color(0,0,0));
        btnAssign.setBackground(new Color(144,202,249));
    }//GEN-LAST:event_btnAssignMouseEntered

    private void btnAssignMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAssignMouseExited
        // TODO add your handling code here:
        btnAssign.setForeground(new Color(188,188,188));
        btnAssign.setBackground(new Color(13,17,23));
    }//GEN-LAST:event_btnAssignMouseExited

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed

        int selectedRow = tblInsuranceWorkTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select a Row");
            return;
        } else {
            InsuranceWorkRequest insuranceWorkRequest = (InsuranceWorkRequest) tblInsuranceWorkTable.getValueAt(selectedRow, 0);
            if (insuranceWorkRequest.getStatus().equals("Sent")) {
                insuranceWorkRequest.setReceiver(userAccount);
                insuranceWorkRequest.setStatus("Pending on Agent: " + userAccount.getEmp().getEmpName());
                populateTable();
                JOptionPane.showMessageDialog(null, "Succes. Request is assigned to you", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Can't assign this request, as it is in " + insuranceWorkRequest.getStatus() + " status", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_btnAssignActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnProcessRequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblInsuranceWorkTable;
    // End of variables declaration//GEN-END:variables

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblInsuranceWorkTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : insuranceAgentOrganization.getWorkQueue().getWorkRequests()) {
            Object[] row = new Object[8];
            String status = request.getStatus();
            row[0] = ((InsuranceWorkRequest) request);
            row[1] = ((InsuranceWorkRequest) request).getInsCustomer().getCustFirstName() + " " + ((InsuranceWorkRequest) request).getInsCustomer().getCustLastName();
            row[2] = ((InsuranceWorkRequest) request).getHealthCenter();

            row[3] = request.getSender().getEmp().getEmpName();
            row[4] = request.getReceiver();

            row[5] = ((InsuranceWorkRequest) request).getBillAmount();

            row[6] = ((InsuranceWorkRequest) request).getClaimAmount();
            row[7] = request.getStatus();

            model.addRow(row);
        }
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        tblInsuranceWorkTable.setRowSorter(sorter);
    }
}
